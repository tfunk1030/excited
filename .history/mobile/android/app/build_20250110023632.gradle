apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"

/**
 * This is the configuration block for the React Native Gradle Plugin.
 * Make sure this is BEFORE the android block.
 */
project.ext.react = [
    enableHermes: true,
    entryFile: "index.js",
    bundleInDebug: false,
    bundleInRelease: true,
    root: "../..",
    inputExcludes: ["android/**", "ios/**"],
    nodeExecutableAndArgs: ["node"],
    androidPackageName: "com.excited_mobile",
    cliPath: "node_modules/react-native/cli.js",
    hermesCommand: "node_modules/react-native/sdks/hermesc/%OS-BIN%/hermesc"
]

apply from: "../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"
applyNativeModulesAppBuildGradle(project)
apply plugin: "com.facebook.react"

def enableProguardInReleaseBuilds = false
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdk rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    namespace "com.excited_mobile"
    defaultConfig {
        applicationId "com.excited_mobile"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        
        multiDexEnabled true
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
                srcDirs += [
                    'build/generated/rncli/src/main/java',
                    'build/generated/source/codegen/java'
                ]
                // Allow PackageList.java to be generated
                excludes = []
            }
        }
    }

    configurations.all {
        resolutionStrategy {
            force 'com.facebook.react:react-native:0.72.7'
            // Ensure consistent versions of React Native dependencies
            dependencySubstitution {
                substitute module('com.facebook.react:react-native') using module('com.facebook.react:react-android:0.72.7')
            }
        }
    }

    packagingOptions {
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        exclude '**/libjsc.so'
        exclude '**/libreactnativejni.so'
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android") {
        exclude group: 'com.facebook.react', module: 'react-native'
    }

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }

    implementation("org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.kotlinVersion}")
}

// Clean up any existing generated files before build
def generatedSrcDir = new File(buildDir, "generated")
if (generatedSrcDir.exists()) {
    generatedSrcDir.deleteDir()
}
