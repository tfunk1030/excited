plugins {
    id "com.android.application"
    id "com.facebook.react"
    id "org.jetbrains.kotlin.android"
}

apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

/**
 * This is the configuration block for the React Native project.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '..'
    root = file("../")
    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native
    reactNativeDir = file("../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen
    codegenDir = file("../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js
    cliFile = file("../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    debuggableVariants = ["debug"]
}

def FLIPPER_VERSION = "0.182.0"
def jscFlavor = "org.webkit:android-jsc:+"

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    namespace "com.excited_mobile"
    defaultConfig {
        applicationId "com.excited_mobile"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        resValue "string", "build_config_package", "com.excited_mobile"
        
        // If you have custom BuildConfig fields, add them here
        buildConfigField "String", "API_BASE_URL", '"https://api.example.com"'
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.javaVersion.toString()
        freeCompilerArgs = ['-Xjvm-default=all']
    }

    buildFeatures {
        buildConfig true
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android:0.72.7")
    implementation("com.facebook.react:hermes-android:0.72.7")

    // JSC from node_modules
    implementation jscFlavor

    // React Native dependencies
    implementation project(':react-native-config')
    implementation project(':@react-native-async-storage_async-storage')
    implementation project(':@react-native-screens_android')
    implementation project(':@react-native-fast-image_android')

    // Support libraries
    implementation "androidx.core:core-ktx:1.10.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${rootProject.ext.kotlinVersion}"

    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}")
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)

task validateVersions {
    doLast {
        println "Validating build tool versions..."
        
        assert project.hasProperty('kotlinVersion') && kotlinVersion == "1.7.20" : "Kotlin version must be 1.7.20"
        assert project.hasProperty('reactNativeVersion') && reactNativeVersion == "0.72.7" : "React Native version must be 0.72.7"
        assert project.gradle.gradleVersion.startsWith("7.6") : "Gradle version must be 7.6.x"
        
        println "Version validation passed!"
    }
}

preBuild.dependsOn validateVersions
