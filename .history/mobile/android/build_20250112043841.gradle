// Top-level build file where you can add configuration options common to all sub-projects/modules.
// Fix: Removed duplicate maven repository paths and consolidated configuration

buildscript {
    ext {
        buildToolsVersion = "34.0.0"
        minSdkVersion = 21
        compileSdkVersion = 34
        targetSdkVersion = 34
        ndkVersion = "23.1.7779620"
        kotlinVersion = "1.7.20"
        androidGradlePluginVersion = "7.4.2"
        reactNativeVersion = "0.72.7"
        javaVersion = JavaVersion.VERSION_17
        
        safeExtGet = { prop, fallback ->
            rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
        }
    }
    repositories {
        google()
        mavenCentral()
        maven { 
            url = uri("${rootProject.projectDir}/../node_modules/@react-native/gradle-plugin")
            metadataSources {
                artifact()
            }
        }
    }
    dependencies {
        classpath("com.android.tools.build:gradle:${androidGradlePluginVersion}")
        classpath("com.facebook.react:react-native-gradle-plugin:${reactNativeVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
    }
}

def REACT_NATIVE_VERSION = new File(['node', '--print', "JSON.parse(require('fs').readFileSync(require.resolve('react-native/package.json'), 'utf-8')).version"].execute(null, rootDir).text.trim())

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url = uri("${project.rootDir}/../node_modules/react-native/android") }
        maven { url = uri("https://www.jitpack.io") }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        maven {
            // Add this repository for React Native packages
            url("$rootDir/../node_modules/react-native/android/com/facebook/react/react-native/${reactNativeVersion}")
            metadataSources {
                artifact()
            }
        }
    }
    
    configurations.all {
        resolutionStrategy {
            force "com.facebook.react:react-native:${reactNativeVersion}"
            force "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
            force "com.facebook.react:hermes-android:${reactNativeVersion}"
        }
    }
}

subprojects {
    afterEvaluate { project ->
        if (project.hasProperty("android")) {
            android {
                compileOptions {
                    sourceCompatibility = rootProject.ext.javaVersion
                    targetCompatibility = rootProject.ext.javaVersion
                }
            }
        }
        tasks.withType(JavaCompile) {
            sourceCompatibility = rootProject.ext.javaVersion
            targetCompatibility = rootProject.ext.javaVersion
        }
        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
            kotlinOptions {
                jvmTarget = rootProject.ext.javaVersion.toString()
            }
        }
    }
}
