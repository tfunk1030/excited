{
    "sourceFile": "mobile/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1736750255269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736750432511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,17 +31,43 @@\n ## Development\r\n \r\n 1. Start the development server:\r\n ```bash\r\n+# Start on default port\r\n npx expo start\r\n+\r\n+# If port 5554 is blocked, use port 9000\r\n+npx expo start --port 9000\r\n ```\r\n \r\n 2. Run on a device:\r\n    - Scan the QR code with Expo Go (Android)\r\n    - Scan the QR code with Camera app (iOS)\r\n    - Press 'a' for Android emulator\r\n    - Press 'i' for iOS simulator\r\n \r\n+### Port Configuration\r\n+\r\n+If you encounter the error:\r\n+```\r\n+Error: could not connect to TCP port 5554: cannot connect to 127.0.0.1:5554: No connection could be made because the target machine actively refused it. (10061)\r\n+```\r\n+\r\n+Use these solutions:\r\n+1. Start Expo with port 9000:\r\n+```bash\r\n+npx expo start --port 9000\r\n+```\r\n+\r\n+2. Or add to package.json scripts:\r\n+```json\r\n+{\r\n+  \"scripts\": {\r\n+    \"start\": \"expo start --port 9000\"\r\n+  }\r\n+}\r\n+```\r\n+\r\n ## Building\r\n \r\n ### Development Build\r\n \r\n@@ -108,17 +134,28 @@\n ```bash\r\n npx expo start --clear\r\n ```\r\n \r\n-2. Clean project:\r\n+2. Port connection issues:\r\n ```bash\r\n+# Kill any processes using port 5554 or 9000\r\n+netstat -ano | findstr :5554\r\n+netstat -ano | findstr :9000\r\n+taskkill /PID <PID> /F\r\n+\r\n+# Then restart with specific port\r\n+npx expo start --port 9000\r\n+```\r\n+\r\n+3. Clean project:\r\n+```bash\r\n npm cache clean --force\r\n rm -rf node_modules\r\n rm -rf .expo\r\n npm install\r\n ```\r\n \r\n-3. Reset Expo Go cache:\r\n+4. Reset Expo Go cache:\r\n    - Clear app data (Android)\r\n    - Delete and reinstall Expo Go (iOS)\r\n \r\n ## Contributing\r\n"
                },
                {
                    "date": 1736750502406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n - npm or yarn\r\n - Expo CLI (`npm install -g expo-cli`)\r\n - EAS CLI (`npm install -g eas-cli`)\r\n - Expo Go app installed on your mobile device\r\n+- Android Studio with an emulator configured\r\n \r\n ## Setup\r\n \r\n 1. Install dependencies:\r\n@@ -31,42 +32,41 @@\n ## Development\r\n \r\n 1. Start the development server:\r\n ```bash\r\n-# Start on default port\r\n npx expo start\r\n-\r\n-# If port 5554 is blocked, use port 9000\r\n-npx expo start --port 9000\r\n ```\r\n \r\n 2. Run on a device:\r\n    - Scan the QR code with Expo Go (Android)\r\n    - Scan the QR code with Camera app (iOS)\r\n-   - Press 'a' for Android emulator\r\n    - Press 'i' for iOS simulator\r\n+   - For Android emulator:\r\n+     1. First, ensure Android Studio is open\r\n+     2. Start your emulator from Android Studio's Device Manager\r\n+     3. Then press 'a' in the Expo terminal\r\n \r\n-### Port Configuration\r\n+### Android Emulator Issues\r\n \r\n-If you encounter the error:\r\n+If you see this error when pressing 'a':\r\n ```\r\n Error: could not connect to TCP port 5554: cannot connect to 127.0.0.1:5554: No connection could be made because the target machine actively refused it. (10061)\r\n ```\r\n \r\n-Use these solutions:\r\n-1. Start Expo with port 9000:\r\n-```bash\r\n-npx expo start --port 9000\r\n-```\r\n+Follow these steps:\r\n+1. Open Android Studio\r\n+2. Go to Tools > Device Manager\r\n+3. Click \"Virtual Device Manager\"\r\n+4. Start your emulator from here first\r\n+5. Once the emulator is fully loaded, return to your terminal and press 'a'\r\n \r\n-2. Or add to package.json scripts:\r\n-```json\r\n-{\r\n-  \"scripts\": {\r\n-    \"start\": \"expo start --port 9000\"\r\n-  }\r\n-}\r\n-```\r\n+If the error persists:\r\n+1. Close the emulator and Android Studio\r\n+2. Open Task Manager\r\n+3. End any \"adb\" or \"qemu\" processes\r\n+4. Restart Android Studio\r\n+5. Start the emulator fresh\r\n+6. Try running the app again\r\n \r\n ## Building\r\n \r\n ### Development Build\r\n"
                },
                {
                    "date": 1736751491031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,10 +134,26 @@\n ```bash\r\n npx expo start --clear\r\n ```\r\n \r\n-2. Port connection issues:\r\n+2. Bundling Error with NativeAnimatedHelper:\r\n+If you see this error:\r\n+```\r\n+Android Bundling failed: SyntaxError in node_modules\\react-native\\src\\private\\animated\\NativeAnimatedHelper.js\r\n+```\r\n+Fix by:\r\n ```bash\r\n+# Clear metro and watchman cache\r\n+npx react-native start --reset-cache\r\n+\r\n+# If error persists, try:\r\n+rm -rf node_modules\r\n+npm install\r\n+npx expo start --clear\r\n+```\r\n+\r\n+3. Port connection issues:\r\n+```bash\r\n # Kill any processes using port 5554 or 9000\r\n netstat -ano | findstr :5554\r\n netstat -ano | findstr :9000\r\n taskkill /PID <PID> /F\r\n@@ -145,20 +161,26 @@\n # Then restart with specific port\r\n npx expo start --port 9000\r\n ```\r\n \r\n-3. Clean project:\r\n+4. Clean project:\r\n ```bash\r\n npm cache clean --force\r\n rm -rf node_modules\r\n rm -rf .expo\r\n npm install\r\n ```\r\n \r\n-4. Reset Expo Go cache:\r\n+5. Reset Expo Go cache:\r\n    - Clear app data (Android)\r\n    - Delete and reinstall Expo Go (iOS)\r\n \r\n+6. If bundling errors persist:\r\n+   - Delete the babel cache: `rm -rf node_modules/.cache/babel-loader/*`\r\n+   - Delete metro cache: `rm -rf node_modules/.cache/metro/*`\r\n+   - Reinstall dependencies: `npm install`\r\n+   - Start with clean cache: `npx expo start --clear`\r\n+\r\n ## Contributing\r\n \r\n 1. Create a feature branch\r\n 2. Make your changes\r\n"
                },
                {
                    "date": 1736751801339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,39 @@\n cd mobile\r\n npm install\r\n ```\r\n \r\n-2. Log in to your Expo account:\r\n+2. Install Expo development client:\r\n ```bash\r\n+npx expo install expo-dev-client\r\n+```\r\n+\r\n+3. Install iOS dependencies (if iOS directory exists):\r\n+```bash\r\n+npx pod-install\r\n+```\r\n+\r\n+4. Configure deep links:\r\n+```bash\r\n+# List current schemes\r\n+npx uri-scheme list\r\n+\r\n+# Add your scheme (replace 'lastshot' with your preferred scheme)\r\n+npx uri-scheme add lastshot\r\n+```\r\n+\r\n+5. Update index.js to include dev client:\r\n+```javascript\r\n+// Add at the top of index.js, before App import\r\n+import 'expo-dev-client';\r\n+```\r\n+\r\n+6. Log in to your Expo account:\r\n+```bash\r\n eas login\r\n ```\r\n \r\n-3. Configure the project:\r\n+7. Configure the project:\r\n ```bash\r\n eas build:configure\r\n ```\r\n \r\n"
                },
                {
                    "date": 1736793704072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n ```\r\n \r\n 2. Install the development build:\r\n ```bash\r\n-eas build:run --platform android\r\n+y\r\n # or for iOS\r\n eas build:run --platform ios\r\n ```\r\n \r\n"
                }
            ],
            "date": 1736750255269,
            "name": "Commit-0",
            "content": "# LastShot Mobile App\r\n\r\nA React Native mobile application built with Expo for golf shot calculations and weather conditions.\r\n\r\n## Prerequisites\r\n\r\n- Node.js (v18 or newer)\r\n- npm or yarn\r\n- Expo CLI (`npm install -g expo-cli`)\r\n- EAS CLI (`npm install -g eas-cli`)\r\n- Expo Go app installed on your mobile device\r\n\r\n## Setup\r\n\r\n1. Install dependencies:\r\n```bash\r\ncd mobile\r\nnpm install\r\n```\r\n\r\n2. Log in to your Expo account:\r\n```bash\r\neas login\r\n```\r\n\r\n3. Configure the project:\r\n```bash\r\neas build:configure\r\n```\r\n\r\n## Development\r\n\r\n1. Start the development server:\r\n```bash\r\nnpx expo start\r\n```\r\n\r\n2. Run on a device:\r\n   - Scan the QR code with Expo Go (Android)\r\n   - Scan the QR code with Camera app (iOS)\r\n   - Press 'a' for Android emulator\r\n   - Press 'i' for iOS simulator\r\n\r\n## Building\r\n\r\n### Development Build\r\n\r\n1. Create a development build:\r\n```bash\r\neas build --profile development --platform android\r\n# or for iOS\r\neas build --profile development --platform ios\r\n```\r\n\r\n2. Install the development build:\r\n```bash\r\neas build:run --platform android\r\n# or for iOS\r\neas build:run --platform ios\r\n```\r\n\r\n### Production Build\r\n\r\n1. Create a production build:\r\n```bash\r\neas build --profile production --platform android\r\n# or for iOS\r\neas build --profile production --platform ios\r\n```\r\n\r\n2. Submit to stores:\r\n```bash\r\neas submit -p android\r\n# or for iOS\r\neas submit -p ios\r\n```\r\n\r\n## Project Structure\r\n\r\n```\r\nmobile/\r\n├── app/                 # Expo Router app directory\r\n│   ├── _layout.tsx     # Root layout with tab navigation\r\n│   ├── index.tsx       # Last Shot screen\r\n│   ├── weather.tsx     # Weather screen\r\n│   ├── shot-calc.tsx   # Shot Calculator screen\r\n│   └── settings.tsx    # Settings screen\r\n├── src/\r\n│   ├── components/     # Reusable components\r\n│   ├── styles/        # Theme and styling\r\n│   ├── utils/         # Utility functions\r\n│   └── types/         # TypeScript types\r\n└── assets/            # Images, fonts, etc.\r\n```\r\n\r\n## Environment Variables\r\n\r\nCreate a `.env` file in the root directory with the following variables:\r\n```\r\nWEATHER_API_KEY=your_weather_api_key\r\nTOMORROW_API_KEY=your_tomorrow_api_key\r\nMAPS_API_KEY=your_maps_api_key\r\n```\r\n\r\n## Troubleshooting\r\n\r\n1. Metro bundler issues:\r\n```bash\r\nnpx expo start --clear\r\n```\r\n\r\n2. Clean project:\r\n```bash\r\nnpm cache clean --force\r\nrm -rf node_modules\r\nrm -rf .expo\r\nnpm install\r\n```\r\n\r\n3. Reset Expo Go cache:\r\n   - Clear app data (Android)\r\n   - Delete and reinstall Expo Go (iOS)\r\n\r\n## Contributing\r\n\r\n1. Create a feature branch\r\n2. Make your changes\r\n3. Submit a pull request\r\n\r\n## License\r\n\r\nThis project is proprietary and confidential.\r\n"
        }
    ]
}