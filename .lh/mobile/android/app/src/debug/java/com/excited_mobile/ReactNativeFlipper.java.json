{
    "sourceFile": "mobile/android/app/src/debug/java/com/excited_mobile/ReactNativeFlipper.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1736572373663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736572685913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,30 +17,21 @@\n import com.facebook.react.bridge.ReactContext;\r\n import com.facebook.react.modules.network.NetworkingModule;\r\n import okhttp3.OkHttpClient;\r\n \r\n-/**\r\n- * Class responsible for loading Flipper inside your React Native application. This is the debug\r\n- * flavor of it. Here you can add your own plugins and customize the Flipper setup.\r\n- */\r\n public class ReactNativeFlipper {\r\n   public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\r\n     if (FlipperUtils.shouldEnableFlipper(context)) {\r\n       final FlipperClient client = AndroidFlipperClient.getInstance(context);\r\n \r\n       client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\r\n       client.addPlugin(new DatabasesFlipperPlugin(context));\r\n       client.addPlugin(new SharedPreferencesFlipperPlugin(context));\r\n-      client.addPlugin(new CrashReporterPlugin());\r\n+      client.addPlugin(CrashReporterPlugin.getInstance());\r\n \r\n       NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\r\n       NetworkingModule.setCustomClientBuilder(\r\n-          new NetworkingModule.CustomClientBuilder() {\r\n-            @Override\r\n-            public void apply(OkHttpClient.Builder builder) {\r\n-              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\r\n-            }\r\n-          });\r\n+          builder -> builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin)));\r\n       client.addPlugin(networkFlipperPlugin);\r\n       client.start();\r\n \r\n       // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\r\n"
                },
                {
                    "date": 1736573304907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,42 @@\n+Unable to match the desired swap behavior.\r\n+FATAL EXCEPTION: main\r\n+Process: com.excited_mobile, PID: 5190\r\n+java.lang.RuntimeException: Unable to instantiate activity ComponentInfo{com.excited_mobile/com.excited_mobile.MainActivity}: java.lang.ClassNotFoundException: Didn't find class \"com.excited_mobile.MainActivity\" on path: DexPathList[[zip file \"/data/app/~~6nHZRo6Mxv4z9_SuXRwaUw==/com.excited_mobile-afpJFjFnhlXDQ7sV8mXTzg==/base.apk\"],nativeLibraryDirectories=[/data/app/~~6nHZRo6Mxv4z9_SuXRwaUw==/com.excited_mobile-afpJFjFnhlXDQ7sV8mXTzg==/lib/x86_64, /data/app/~~6nHZRo6Mxv4z9_SuXRwaUw==/com.excited_mobile-afpJFjFnhlXDQ7sV8mXTzg==/base.apk!/lib/x86_64, /system/lib64, /system_ext/lib64]]\r\n+\tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3689)\r\n+\tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3922)\r\n+\tat android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:103)\r\n+\tat android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:139)\r\n+\tat android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:96)\r\n+\tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:2443)\r\n+\tat android.os.Handler.dispatchMessage(Handler.java:106)\r\n+\tat android.os.Looper.loopOnce(Looper.java:205)\r\n+\tat android.os.Looper.loop(Looper.java:294)\r\n+\tat android.app.ActivityThread.main(ActivityThread.java:8177)\r\n+\tat java.lang.reflect.Method.invoke(Native Method)\r\n+\tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:552)\r\n+\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:971)\r\n+Caused by: java.lang.ClassNotFoundException: Didn't find class \"com.excited_mobile.MainActivity\" on path: DexPathList[[zip file \"/data/app/~~6nHZRo6Mxv4z9_SuXRwaUw==/com.excited_mobile-afpJFjFnhlXDQ7sV8mXTzg==/base.apk\"],nativeLibraryDirectories=[/data/app/~~6nHZRo6Mxv4z9_SuXRwaUw==/com.excited_mobile-afpJFjFnhlXDQ7sV8mXTzg==/lib/x86_64, /data/app/~~6nHZRo6Mxv4z9_SuXRwaUw==/com.excited_mobile-afpJFjFnhlXDQ7sV8mXTzg==/base.apk!/lib/x86_64, /system/lib64, /system_ext/lib64]]\r\n+\tat dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:259)\r\n+\tat java.lang.ClassLoader.loadClass(ClassLoader.java:379)\r\n+\tat java.lang.ClassLoader.loadClass(ClassLoader.java:312)\r\n+\tat android.app.AppComponentFactory.instantiateActivity(AppComponentFactory.java:95)\r\n+\tat androidx.core.app.CoreComponentFactory.instantiateActivity(CoreComponentFactory.java:45)\r\n+\tat android.app.Instrumentation.newActivity(Instrumentation.java:1378)\r\n+\tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3676)\r\n+\tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3922) \r\n+\tat android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:103) \r\n+\tat android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:139) \r\n+\tat android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:96) \r\n+\tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:2443) \r\n+\tat android.os.Handler.dispatchMessage(Handler.java:106) \r\n+\tat android.os.Looper.loopOnce(Looper.java:205) \r\n+\tat android.os.Looper.loop(Looper.java:294) \r\n+\tat android.app.ActivityThread.main(ActivityThread.java:8177) \r\n+\tat java.lang.reflect.Method.invoke(Native Method) \r\n+\tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:552) \r\n+\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:971) \r\n+File error accessing recents directory (directory doesn't exist?).\r\n package com.excited_mobile;\r\n \r\n import android.content.Context;\r\n import com.facebook.flipper.android.AndroidFlipperClient;\r\n"
                }
            ],
            "date": 1736572373663,
            "name": "Commit-0",
            "content": "package com.excited_mobile;\r\n\r\nimport android.content.Context;\r\nimport com.facebook.flipper.android.AndroidFlipperClient;\r\nimport com.facebook.flipper.android.utils.FlipperUtils;\r\nimport com.facebook.flipper.core.FlipperClient;\r\nimport com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;\r\nimport com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin;\r\nimport com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin;\r\nimport com.facebook.flipper.plugins.inspector.DescriptorMapping;\r\nimport com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\r\nimport com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;\r\nimport com.facebook.flipper.plugins.network.NetworkFlipperPlugin;\r\nimport com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;\r\nimport com.facebook.react.ReactInstanceEventListener;\r\nimport com.facebook.react.ReactInstanceManager;\r\nimport com.facebook.react.bridge.ReactContext;\r\nimport com.facebook.react.modules.network.NetworkingModule;\r\nimport okhttp3.OkHttpClient;\r\n\r\n/**\r\n * Class responsible for loading Flipper inside your React Native application. This is the debug\r\n * flavor of it. Here you can add your own plugins and customize the Flipper setup.\r\n */\r\npublic class ReactNativeFlipper {\r\n  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\r\n    if (FlipperUtils.shouldEnableFlipper(context)) {\r\n      final FlipperClient client = AndroidFlipperClient.getInstance(context);\r\n\r\n      client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\r\n      client.addPlugin(new DatabasesFlipperPlugin(context));\r\n      client.addPlugin(new SharedPreferencesFlipperPlugin(context));\r\n      client.addPlugin(new CrashReporterPlugin());\r\n\r\n      NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\r\n      NetworkingModule.setCustomClientBuilder(\r\n          new NetworkingModule.CustomClientBuilder() {\r\n            @Override\r\n            public void apply(OkHttpClient.Builder builder) {\r\n              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\r\n            }\r\n          });\r\n      client.addPlugin(networkFlipperPlugin);\r\n      client.start();\r\n\r\n      // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\r\n      // Hence we run if after all native modules have been initialized\r\n      ReactContext reactContext = reactInstanceManager.getCurrentReactContext();\r\n      if (reactContext == null) {\r\n        reactInstanceManager.addReactInstanceEventListener(\r\n            new ReactInstanceEventListener() {\r\n              @Override\r\n              public void onReactContextInitialized(ReactContext reactContext) {\r\n                reactInstanceManager.removeReactInstanceEventListener(this);\r\n                client.addPlugin(new FrescoFlipperPlugin());\r\n              }\r\n            });\r\n      } else {\r\n        client.addPlugin(new FrescoFlipperPlugin());\r\n      }\r\n    }\r\n  }\r\n}"
        }
    ]
}