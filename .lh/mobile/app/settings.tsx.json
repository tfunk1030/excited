{
    "sourceFile": "mobile/app/settings.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1736749085506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736749321817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,147 +1,117 @@\n import { useState } from 'react';\r\n-import { StyleSheet, View, Text, ScrollView, Switch, TouchableOpacity } from 'react-native';\r\n+import { StyleSheet, View, Text, ScrollView, TextInput, TouchableOpacity } from 'react-native';\r\n import { SafeAreaView } from 'react-native-safe-area-context';\r\n import { theme } from '../src/styles/theme';\r\n import { Ionicons } from '@expo/vector-icons';\r\n \r\n-interface Settings {\r\n-  units: {\r\n-    distance: 'yards' | 'meters';\r\n-    temperature: 'fahrenheit' | 'celsius';\r\n-    elevation: 'feet' | 'meters';\r\n-  };\r\n-  notifications: {\r\n-    weather: boolean;\r\n-    tips: boolean;\r\n-  };\r\n+interface Club {\r\n+  name: string;\r\n+  distance: number;\r\n+  loft: number;\r\n }\r\n \r\n export default function Settings() {\r\n-  const [settings, setSettings] = useState<Settings>({\r\n-    units: {\r\n-      distance: 'yards',\r\n-      temperature: 'fahrenheit',\r\n-      elevation: 'feet',\r\n-    },\r\n-    notifications: {\r\n-      weather: true,\r\n-      tips: true,\r\n-    },\r\n+  const [newClub, setNewClub] = useState<Club>({\r\n+    name: '',\r\n+    distance: 0,\r\n+    loft: 0,\r\n   });\r\n \r\n   return (\r\n     <SafeAreaView style={styles.container}>\r\n       <ScrollView style={styles.scrollView}>\r\n+        <Text style={styles.title}>Settings</Text>\r\n+\r\n         <View style={styles.card}>\r\n-          <Text style={styles.cardTitle}>Units</Text>\r\n-          \r\n+          <Text style={styles.cardTitle}>Unit Preferences</Text>\r\n+\r\n           <View style={styles.settingGroup}>\r\n             <View style={styles.settingRow}>\r\n-              <Ionicons name=\"resize\" size={24} color={theme.colors.text.secondary} />\r\n-              <Text style={styles.label}>Distance</Text>\r\n-              <TouchableOpacity \r\n-                style={[\r\n-                  styles.unitToggle,\r\n-                  settings.units.distance === 'yards' && styles.unitToggleActive\r\n-                ]}\r\n-              >\r\n-                <Text style={styles.unitToggleText}>Yards</Text>\r\n-              </TouchableOpacity>\r\n-              <TouchableOpacity \r\n-                style={[\r\n-                  styles.unitToggle,\r\n-                  settings.units.distance === 'meters' && styles.unitToggleActive\r\n-                ]}\r\n-              >\r\n-                <Text style={styles.unitToggleText}>Meters</Text>\r\n-              </TouchableOpacity>\r\n+              <View style={styles.settingHeader}>\r\n+                <Ionicons name=\"resize\" size={24} color={theme.colors.text.secondary} />\r\n+                <Text style={styles.settingLabel}>Distance Unit</Text>\r\n+              </View>\r\n+              <View style={styles.toggleGroup}>\r\n+                <TouchableOpacity style={[styles.toggleButton, styles.toggleActive]}>\r\n+                  <Text style={styles.toggleText}>Yards</Text>\r\n+                </TouchableOpacity>\r\n+                <TouchableOpacity style={styles.toggleButton}>\r\n+                  <Text style={styles.toggleText}>Meters</Text>\r\n+                </TouchableOpacity>\r\n+              </View>\r\n             </View>\r\n \r\n             <View style={styles.settingRow}>\r\n-              <Ionicons name=\"thermometer\" size={24} color={theme.colors.text.secondary} />\r\n-              <Text style={styles.label}>Temperature</Text>\r\n-              <TouchableOpacity \r\n-                style={[\r\n-                  styles.unitToggle,\r\n-                  settings.units.temperature === 'fahrenheit' && styles.unitToggleActive\r\n-                ]}\r\n-              >\r\n-                <Text style={styles.unitToggleText}>°F</Text>\r\n-              </TouchableOpacity>\r\n-              <TouchableOpacity \r\n-                style={[\r\n-                  styles.unitToggle,\r\n-                  settings.units.temperature === 'celsius' && styles.unitToggleActive\r\n-                ]}\r\n-              >\r\n-                <Text style={styles.unitToggleText}>°C</Text>\r\n-              </TouchableOpacity>\r\n+              <View style={styles.settingHeader}>\r\n+                <Ionicons name=\"thermometer\" size={24} color={theme.colors.text.secondary} />\r\n+                <Text style={styles.settingLabel}>Temperature Unit</Text>\r\n+              </View>\r\n+              <View style={styles.toggleGroup}>\r\n+                <TouchableOpacity style={styles.toggleButton}>\r\n+                  <Text style={styles.toggleText}>Celsius</Text>\r\n+                </TouchableOpacity>\r\n+                <TouchableOpacity style={[styles.toggleButton, styles.toggleActive]}>\r\n+                  <Text style={styles.toggleText}>Fahrenheit</Text>\r\n+                </TouchableOpacity>\r\n+              </View>\r\n             </View>\r\n \r\n             <View style={styles.settingRow}>\r\n-              <Ionicons name=\"trending-up\" size={24} color={theme.colors.text.secondary} />\r\n-              <Text style={styles.label}>Elevation</Text>\r\n-              <TouchableOpacity \r\n-                style={[\r\n-                  styles.unitToggle,\r\n-                  settings.units.elevation === 'feet' && styles.unitToggleActive\r\n-                ]}\r\n-              >\r\n-                <Text style={styles.unitToggleText}>Feet</Text>\r\n-              </TouchableOpacity>\r\n-              <TouchableOpacity \r\n-                style={[\r\n-                  styles.unitToggle,\r\n-                  settings.units.elevation === 'meters' && styles.unitToggleActive\r\n-                ]}\r\n-              >\r\n-                <Text style={styles.unitToggleText}>Meters</Text>\r\n-              </TouchableOpacity>\r\n+              <View style={styles.settingHeader}>\r\n+                <Ionicons name=\"trending-up\" size={24} color={theme.colors.text.secondary} />\r\n+                <Text style={styles.settingLabel}>Altitude Unit</Text>\r\n+              </View>\r\n+              <View style={styles.toggleGroup}>\r\n+                <TouchableOpacity style={styles.toggleButton}>\r\n+                  <Text style={styles.toggleText}>Meters</Text>\r\n+                </TouchableOpacity>\r\n+                <TouchableOpacity style={[styles.toggleButton, styles.toggleActive]}>\r\n+                  <Text style={styles.toggleText}>Feet</Text>\r\n+                </TouchableOpacity>\r\n+              </View>\r\n             </View>\r\n           </View>\r\n         </View>\r\n \r\n         <View style={styles.card}>\r\n-          <Text style={styles.cardTitle}>Notifications</Text>\r\n-          \r\n-          <View style={styles.settingGroup}>\r\n-            <View style={styles.settingRow}>\r\n-              <Ionicons name=\"cloudy\" size={24} color={theme.colors.text.secondary} />\r\n-              <Text style={styles.label}>Weather Updates</Text>\r\n-              <Switch\r\n-                value={settings.notifications.weather}\r\n-                onValueChange={(value) => \r\n-                  setSettings(prev => ({\r\n-                    ...prev,\r\n-                    notifications: { ...prev.notifications, weather: value }\r\n-                  }))\r\n-                }\r\n-                trackColor={{ false: theme.colors.border, true: theme.colors.primary }}\r\n-              />\r\n-            </View>\r\n+          <Text style={styles.cardTitle}>Club Management</Text>\r\n \r\n-            <View style={styles.settingRow}>\r\n-              <Ionicons name=\"bulb\" size={24} color={theme.colors.text.secondary} />\r\n-              <Text style={styles.label}>Golf Tips</Text>\r\n-              <Switch\r\n-                value={settings.notifications.tips}\r\n-                onValueChange={(value) => \r\n-                  setSettings(prev => ({\r\n-                    ...prev,\r\n-                    notifications: { ...prev.notifications, tips: value }\r\n-                  }))\r\n-                }\r\n-                trackColor={{ false: theme.colors.border, true: theme.colors.primary }}\r\n-              />\r\n-            </View>\r\n+          <View style={styles.inputGroup}>\r\n+            <Text style={styles.inputLabel}>Club Name</Text>\r\n+            <TextInput\r\n+              style={styles.input}\r\n+              placeholder=\"e.g., Driver\"\r\n+              placeholderTextColor={theme.colors.text.secondary}\r\n+              value={newClub.name}\r\n+              onChangeText={(text) => setNewClub(prev => ({ ...prev, name: text }))}\r\n+            />\r\n+\r\n+            <Text style={styles.inputLabel}>Normal Distance (yards)</Text>\r\n+            <TextInput\r\n+              style={styles.input}\r\n+              placeholder=\"0\"\r\n+              placeholderTextColor={theme.colors.text.secondary}\r\n+              keyboardType=\"numeric\"\r\n+              value={newClub.distance.toString()}\r\n+              onChangeText={(text) => setNewClub(prev => ({ ...prev, distance: parseInt(text) || 0 }))}\r\n+            />\r\n+\r\n+            <Text style={styles.inputLabel}>Loft (degrees)</Text>\r\n+            <TextInput\r\n+              style={styles.input}\r\n+              placeholder=\"0\"\r\n+              placeholderTextColor={theme.colors.text.secondary}\r\n+              keyboardType=\"numeric\"\r\n+              value={newClub.loft.toString()}\r\n+              onChangeText={(text) => setNewClub(prev => ({ ...prev, loft: parseInt(text) || 0 }))}\r\n+            />\r\n+\r\n+            <TouchableOpacity style={styles.addButton}>\r\n+              <Text style={styles.addButtonText}>Add Club</Text>\r\n+            </TouchableOpacity>\r\n           </View>\r\n         </View>\r\n-\r\n-        <TouchableOpacity style={styles.signOutButton}>\r\n-          <Ionicons name=\"log-out\" size={24} color={theme.colors.error} />\r\n-          <Text style={styles.signOutButtonText}>Sign Out</Text>\r\n-        </TouchableOpacity>\r\n       </ScrollView>\r\n     </SafeAreaView>\r\n   );\r\n }\r\n@@ -154,59 +124,82 @@\n   scrollView: {\r\n     flex: 1,\r\n     padding: theme.spacing.md,\r\n   },\r\n+  title: {\r\n+    ...theme.typography.h2,\r\n+    color: theme.colors.text.primary,\r\n+    marginBottom: theme.spacing.lg,\r\n+  },\r\n   card: {\r\n     backgroundColor: theme.colors.card,\r\n     borderRadius: theme.spacing.sm,\r\n     padding: theme.spacing.lg,\r\n     marginBottom: theme.spacing.md,\r\n-    shadowColor: theme.colors.shadow,\r\n-    shadowOffset: { width: 0, height: 2 },\r\n-    shadowOpacity: 0.1,\r\n-    shadowRadius: 4,\r\n-    elevation: 3,\r\n   },\r\n   cardTitle: {\r\n     ...theme.typography.h3,\r\n     color: theme.colors.text.primary,\r\n-    marginBottom: theme.spacing.md,\r\n+    marginBottom: theme.spacing.lg,\r\n   },\r\n   settingGroup: {\r\n+    gap: theme.spacing.lg,\r\n+  },\r\n+  settingRow: {\r\n     gap: theme.spacing.md,\r\n   },\r\n-  settingRow: {\r\n+  settingHeader: {\r\n     flexDirection: 'row',\r\n     alignItems: 'center',\r\n     gap: theme.spacing.sm,\r\n   },\r\n-  label: {\r\n+  settingLabel: {\r\n     ...theme.typography.body,\r\n     color: theme.colors.text.secondary,\r\n+  },\r\n+  toggleGroup: {\r\n+    flexDirection: 'row',\r\n+    backgroundColor: theme.colors.background,\r\n+    borderRadius: theme.spacing.sm,\r\n+    padding: theme.spacing.xs,\r\n+    gap: theme.spacing.xs,\r\n+  },\r\n+  toggleButton: {\r\n     flex: 1,\r\n-  },\r\n-  unitToggle: {\r\n-    paddingHorizontal: theme.spacing.sm,\r\n-    paddingVertical: theme.spacing.xs,\r\n+    paddingVertical: theme.spacing.sm,\r\n+    paddingHorizontal: theme.spacing.md,\r\n     borderRadius: theme.spacing.xs,\r\n-    backgroundColor: theme.colors.border,\r\n+    alignItems: 'center',\r\n   },\r\n-  unitToggleActive: {\r\n+  toggleActive: {\r\n     backgroundColor: theme.colors.primary,\r\n   },\r\n-  unitToggleText: {\r\n+  toggleText: {\r\n     ...theme.typography.button,\r\n-    color: theme.colors.text.inverse,\r\n+    color: theme.colors.text.primary,\r\n   },\r\n-  signOutButton: {\r\n-    flexDirection: 'row',\r\n-    alignItems: 'center',\r\n-    justifyContent: 'center',\r\n-    gap: theme.spacing.sm,\r\n+  inputGroup: {\r\n+    gap: theme.spacing.md,\r\n+  },\r\n+  inputLabel: {\r\n+    ...theme.typography.body,\r\n+    color: theme.colors.text.secondary,\r\n+  },\r\n+  input: {\r\n+    backgroundColor: theme.colors.background,\r\n+    borderRadius: theme.spacing.sm,\r\n     padding: theme.spacing.md,\r\n-    marginTop: theme.spacing.md,\r\n+    color: theme.colors.text.primary,\r\n+    ...theme.typography.body,\r\n   },\r\n-  signOutButtonText: {\r\n+  addButton: {\r\n+    backgroundColor: theme.colors.primary,\r\n+    padding: theme.spacing.md,\r\n+    borderRadius: theme.spacing.sm,\r\n+    alignItems: 'center',\r\n+    marginTop: theme.spacing.sm,\r\n+  },\r\n+  addButtonText: {\r\n     ...theme.typography.button,\r\n-    color: theme.colors.error,\r\n+    color: theme.colors.text.inverse,\r\n   },\r\n }); \n\\ No newline at end of file\n"
                }
            ],
            "date": 1736749085506,
            "name": "Commit-0",
            "content": "import { useState } from 'react';\r\nimport { StyleSheet, View, Text, ScrollView, Switch, TouchableOpacity } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { theme } from '../src/styles/theme';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\ninterface Settings {\r\n  units: {\r\n    distance: 'yards' | 'meters';\r\n    temperature: 'fahrenheit' | 'celsius';\r\n    elevation: 'feet' | 'meters';\r\n  };\r\n  notifications: {\r\n    weather: boolean;\r\n    tips: boolean;\r\n  };\r\n}\r\n\r\nexport default function Settings() {\r\n  const [settings, setSettings] = useState<Settings>({\r\n    units: {\r\n      distance: 'yards',\r\n      temperature: 'fahrenheit',\r\n      elevation: 'feet',\r\n    },\r\n    notifications: {\r\n      weather: true,\r\n      tips: true,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView style={styles.scrollView}>\r\n        <View style={styles.card}>\r\n          <Text style={styles.cardTitle}>Units</Text>\r\n          \r\n          <View style={styles.settingGroup}>\r\n            <View style={styles.settingRow}>\r\n              <Ionicons name=\"resize\" size={24} color={theme.colors.text.secondary} />\r\n              <Text style={styles.label}>Distance</Text>\r\n              <TouchableOpacity \r\n                style={[\r\n                  styles.unitToggle,\r\n                  settings.units.distance === 'yards' && styles.unitToggleActive\r\n                ]}\r\n              >\r\n                <Text style={styles.unitToggleText}>Yards</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity \r\n                style={[\r\n                  styles.unitToggle,\r\n                  settings.units.distance === 'meters' && styles.unitToggleActive\r\n                ]}\r\n              >\r\n                <Text style={styles.unitToggleText}>Meters</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={styles.settingRow}>\r\n              <Ionicons name=\"thermometer\" size={24} color={theme.colors.text.secondary} />\r\n              <Text style={styles.label}>Temperature</Text>\r\n              <TouchableOpacity \r\n                style={[\r\n                  styles.unitToggle,\r\n                  settings.units.temperature === 'fahrenheit' && styles.unitToggleActive\r\n                ]}\r\n              >\r\n                <Text style={styles.unitToggleText}>°F</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity \r\n                style={[\r\n                  styles.unitToggle,\r\n                  settings.units.temperature === 'celsius' && styles.unitToggleActive\r\n                ]}\r\n              >\r\n                <Text style={styles.unitToggleText}>°C</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={styles.settingRow}>\r\n              <Ionicons name=\"trending-up\" size={24} color={theme.colors.text.secondary} />\r\n              <Text style={styles.label}>Elevation</Text>\r\n              <TouchableOpacity \r\n                style={[\r\n                  styles.unitToggle,\r\n                  settings.units.elevation === 'feet' && styles.unitToggleActive\r\n                ]}\r\n              >\r\n                <Text style={styles.unitToggleText}>Feet</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity \r\n                style={[\r\n                  styles.unitToggle,\r\n                  settings.units.elevation === 'meters' && styles.unitToggleActive\r\n                ]}\r\n              >\r\n                <Text style={styles.unitToggleText}>Meters</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.card}>\r\n          <Text style={styles.cardTitle}>Notifications</Text>\r\n          \r\n          <View style={styles.settingGroup}>\r\n            <View style={styles.settingRow}>\r\n              <Ionicons name=\"cloudy\" size={24} color={theme.colors.text.secondary} />\r\n              <Text style={styles.label}>Weather Updates</Text>\r\n              <Switch\r\n                value={settings.notifications.weather}\r\n                onValueChange={(value) => \r\n                  setSettings(prev => ({\r\n                    ...prev,\r\n                    notifications: { ...prev.notifications, weather: value }\r\n                  }))\r\n                }\r\n                trackColor={{ false: theme.colors.border, true: theme.colors.primary }}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.settingRow}>\r\n              <Ionicons name=\"bulb\" size={24} color={theme.colors.text.secondary} />\r\n              <Text style={styles.label}>Golf Tips</Text>\r\n              <Switch\r\n                value={settings.notifications.tips}\r\n                onValueChange={(value) => \r\n                  setSettings(prev => ({\r\n                    ...prev,\r\n                    notifications: { ...prev.notifications, tips: value }\r\n                  }))\r\n                }\r\n                trackColor={{ false: theme.colors.border, true: theme.colors.primary }}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <TouchableOpacity style={styles.signOutButton}>\r\n          <Ionicons name=\"log-out\" size={24} color={theme.colors.error} />\r\n          <Text style={styles.signOutButtonText}>Sign Out</Text>\r\n        </TouchableOpacity>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.background,\r\n  },\r\n  scrollView: {\r\n    flex: 1,\r\n    padding: theme.spacing.md,\r\n  },\r\n  card: {\r\n    backgroundColor: theme.colors.card,\r\n    borderRadius: theme.spacing.sm,\r\n    padding: theme.spacing.lg,\r\n    marginBottom: theme.spacing.md,\r\n    shadowColor: theme.colors.shadow,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  cardTitle: {\r\n    ...theme.typography.h3,\r\n    color: theme.colors.text.primary,\r\n    marginBottom: theme.spacing.md,\r\n  },\r\n  settingGroup: {\r\n    gap: theme.spacing.md,\r\n  },\r\n  settingRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: theme.spacing.sm,\r\n  },\r\n  label: {\r\n    ...theme.typography.body,\r\n    color: theme.colors.text.secondary,\r\n    flex: 1,\r\n  },\r\n  unitToggle: {\r\n    paddingHorizontal: theme.spacing.sm,\r\n    paddingVertical: theme.spacing.xs,\r\n    borderRadius: theme.spacing.xs,\r\n    backgroundColor: theme.colors.border,\r\n  },\r\n  unitToggleActive: {\r\n    backgroundColor: theme.colors.primary,\r\n  },\r\n  unitToggleText: {\r\n    ...theme.typography.button,\r\n    color: theme.colors.text.inverse,\r\n  },\r\n  signOutButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    gap: theme.spacing.sm,\r\n    padding: theme.spacing.md,\r\n    marginTop: theme.spacing.md,\r\n  },\r\n  signOutButtonText: {\r\n    ...theme.typography.button,\r\n    color: theme.colors.error,\r\n  },\r\n}); "
        }
    ]
}