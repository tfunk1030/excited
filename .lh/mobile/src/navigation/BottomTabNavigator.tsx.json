{
    "sourceFile": "mobile/src/navigation/BottomTabNavigator.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1736574779765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736574786245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { Suspense } from 'react';\r\n import { View, ActivityIndicator, StyleSheet } from 'react-native';\r\n import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n-import { MainTabParamList } from './types';\r\n+import { MainTabParamList, MainTabScreenProps } from './types';\r\n import { theme } from '../styles/theme';\r\n \r\n // Lazy load screens\r\n const ShotScreen = React.lazy(() => import('../screens/Shot/ShotScreen'));\r\n"
                },
                {
                    "date": 1736574813856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,10 @@\n-import React, { Suspense } from 'react';\r\n+import React from 'react';\r\n import { View, ActivityIndicator, StyleSheet } from 'react-native';\r\n import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n-import { MainTabParamList, MainTabScreenProps } from './types';\r\n+import { MainTabParamList } from './types';\r\n import { theme } from '../styles/theme';\r\n \r\n-// Lazy load screens\r\n const ShotScreen = React.lazy(() => import('../screens/Shot/ShotScreen'));\r\n const WeatherScreen = React.lazy(() => import('../screens/Weather/WeatherScreen'));\r\n const SettingsScreen = React.lazy(() => import('../screens/Settings/SettingsScreen'));\r\n \r\n@@ -16,34 +15,8 @@\n     <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n   </View>\r\n );\r\n \r\n-const ScreenWrapper: React.FC<{\r\n-  children: React.ReactNode;\r\n-}> = ({ children }) => (\r\n-  <Suspense fallback={<LoadingScreen />}>\r\n-    {children}\r\n-  </Suspense>\r\n-);\r\n-\r\n-const WrappedShotScreen = () => (\r\n-  <ScreenWrapper>\r\n-    <ShotScreen />\r\n-  </ScreenWrapper>\r\n-);\r\n-\r\n-const WrappedWeatherScreen = () => (\r\n-  <ScreenWrapper>\r\n-    <WeatherScreen />\r\n-  </ScreenWrapper>\r\n-);\r\n-\r\n-const WrappedSettingsScreen = () => (\r\n-  <ScreenWrapper>\r\n-    <SettingsScreen />\r\n-  </ScreenWrapper>\r\n-);\r\n-\r\n const BottomTabNavigator = () => {\r\n   return (\r\n     <Tab.Navigator\r\n       screenOptions={{\r\n@@ -61,30 +34,45 @@\n       }}\r\n     >\r\n       <Tab.Screen\r\n         name=\"Shot\"\r\n-        component={WrappedShotScreen}\r\n         options={{\r\n           title: 'Shot Calculator',\r\n           tabBarLabel: 'Shot',\r\n         }}\r\n-      />\r\n+      >\r\n+        {(props) => (\r\n+          <React.Suspense fallback={<LoadingScreen />}>\r\n+            <ShotScreen {...props} />\r\n+          </React.Suspense>\r\n+        )}\r\n+      </Tab.Screen>\r\n       <Tab.Screen\r\n         name=\"Weather\"\r\n-        component={WrappedWeatherScreen}\r\n         options={{\r\n           title: 'Weather',\r\n           tabBarLabel: 'Weather',\r\n         }}\r\n-      />\r\n+      >\r\n+        {(props) => (\r\n+          <React.Suspense fallback={<LoadingScreen />}>\r\n+            <WeatherScreen {...props} />\r\n+          </React.Suspense>\r\n+        )}\r\n+      </Tab.Screen>\r\n       <Tab.Screen\r\n         name=\"Settings\"\r\n-        component={WrappedSettingsScreen}\r\n         options={{\r\n           title: 'Settings',\r\n           tabBarLabel: 'Settings',\r\n         }}\r\n-      />\r\n+      >\r\n+        {(props) => (\r\n+          <React.Suspense fallback={<LoadingScreen />}>\r\n+            <SettingsScreen {...props} />\r\n+          </React.Suspense>\r\n+        )}\r\n+      </Tab.Screen>\r\n     </Tab.Navigator>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1736575008994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,20 +3,34 @@\n import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n import { MainTabParamList } from './types';\r\n import { theme } from '../styles/theme';\r\n \r\n-const ShotScreen = React.lazy(() => import('../screens/Shot/ShotScreen'));\r\n-const WeatherScreen = React.lazy(() => import('../screens/Weather/WeatherScreen'));\r\n-const SettingsScreen = React.lazy(() => import('../screens/Settings/SettingsScreen'));\r\n-\r\n const Tab = createBottomTabNavigator<MainTabParamList>();\r\n \r\n const LoadingScreen = () => (\r\n   <View style={styles.loadingContainer}>\r\n     <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n   </View>\r\n );\r\n \r\n+const ShotScreen = React.lazy(() => \r\n+  import('../screens/Shot/ShotScreen').then(module => ({\r\n+    default: module.default\r\n+  }))\r\n+);\r\n+\r\n+const WeatherScreen = React.lazy(() => \r\n+  import('../screens/Weather/WeatherScreen').then(module => ({\r\n+    default: module.default\r\n+  }))\r\n+);\r\n+\r\n+const SettingsScreen = React.lazy(() => \r\n+  import('../screens/Settings/SettingsScreen').then(module => ({\r\n+    default: module.default\r\n+  }))\r\n+);\r\n+\r\n const BottomTabNavigator = () => {\r\n   return (\r\n     <Tab.Navigator\r\n       screenOptions={{\r\n@@ -39,11 +53,11 @@\n           title: 'Shot Calculator',\r\n           tabBarLabel: 'Shot',\r\n         }}\r\n       >\r\n-        {(props) => (\r\n+        {() => (\r\n           <React.Suspense fallback={<LoadingScreen />}>\r\n-            <ShotScreen {...props} />\r\n+            <ShotScreen />\r\n           </React.Suspense>\r\n         )}\r\n       </Tab.Screen>\r\n       <Tab.Screen\r\n@@ -52,11 +66,11 @@\n           title: 'Weather',\r\n           tabBarLabel: 'Weather',\r\n         }}\r\n       >\r\n-        {(props) => (\r\n+        {() => (\r\n           <React.Suspense fallback={<LoadingScreen />}>\r\n-            <WeatherScreen {...props} />\r\n+            <WeatherScreen />\r\n           </React.Suspense>\r\n         )}\r\n       </Tab.Screen>\r\n       <Tab.Screen\r\n@@ -65,11 +79,11 @@\n           title: 'Settings',\r\n           tabBarLabel: 'Settings',\r\n         }}\r\n       >\r\n-        {(props) => (\r\n+        {() => (\r\n           <React.Suspense fallback={<LoadingScreen />}>\r\n-            <SettingsScreen {...props} />\r\n+            <SettingsScreen />\r\n           </React.Suspense>\r\n         )}\r\n       </Tab.Screen>\r\n     </Tab.Navigator>\r\n"
                },
                {
                    "date": 1736575024165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,26 @@\n     default: module.default\r\n   }))\r\n );\r\n \r\n+const WrappedShotScreen = (props: any) => (\r\n+  <React.Suspense fallback={<LoadingScreen />}>\r\n+    <ShotScreen {...props} />\r\n+  </React.Suspense>\r\n+);\r\n+\r\n+const WrappedWeatherScreen = (props: any) => (\r\n+  <React.Suspense fallback={<LoadingScreen />}>\r\n+    <WeatherScreen {...props} />\r\n+  </React.Suspense>\r\n+);\r\n+\r\n+const WrappedSettingsScreen = (props: any) => (\r\n+  <React.Suspense fallback={<LoadingScreen />}>\r\n+    <SettingsScreen {...props} />\r\n+  </React.Suspense>\r\n+);\r\n+\r\n const BottomTabNavigator = () => {\r\n   return (\r\n     <Tab.Navigator\r\n       screenOptions={{\r\n@@ -48,45 +66,30 @@\n       }}\r\n     >\r\n       <Tab.Screen\r\n         name=\"Shot\"\r\n+        component={WrappedShotScreen}\r\n         options={{\r\n           title: 'Shot Calculator',\r\n           tabBarLabel: 'Shot',\r\n         }}\r\n-      >\r\n-        {() => (\r\n-          <React.Suspense fallback={<LoadingScreen />}>\r\n-            <ShotScreen />\r\n-          </React.Suspense>\r\n-        )}\r\n-      </Tab.Screen>\r\n+      />\r\n       <Tab.Screen\r\n         name=\"Weather\"\r\n+        component={WrappedWeatherScreen}\r\n         options={{\r\n           title: 'Weather',\r\n           tabBarLabel: 'Weather',\r\n         }}\r\n-      >\r\n-        {() => (\r\n-          <React.Suspense fallback={<LoadingScreen />}>\r\n-            <WeatherScreen />\r\n-          </React.Suspense>\r\n-        )}\r\n-      </Tab.Screen>\r\n+      />\r\n       <Tab.Screen\r\n         name=\"Settings\"\r\n+        component={WrappedSettingsScreen}\r\n         options={{\r\n           title: 'Settings',\r\n           tabBarLabel: 'Settings',\r\n         }}\r\n-      >\r\n-        {() => (\r\n-          <React.Suspense fallback={<LoadingScreen />}>\r\n-            <SettingsScreen />\r\n-          </React.Suspense>\r\n-        )}\r\n-      </Tab.Screen>\r\n+      />\r\n     </Tab.Navigator>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1736575032215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React from 'react';\r\n import { View, ActivityIndicator, StyleSheet } from 'react-native';\r\n import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n-import { MainTabParamList } from './types';\r\n+import { MainTabParamList, MainTabScreenProps } from './types';\r\n import { theme } from '../styles/theme';\r\n \r\n const Tab = createBottomTabNavigator<MainTabParamList>();\r\n \r\n"
                },
                {
                    "date": 1736575132900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React from 'react';\r\n import { View, ActivityIndicator, StyleSheet } from 'react-native';\r\n import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n-import { MainTabParamList, MainTabScreenProps } from './types';\r\n+import { MainTabParamList } from './types';\r\n import { theme } from '../styles/theme';\r\n \r\n const Tab = createBottomTabNavigator<MainTabParamList>();\r\n \r\n@@ -11,44 +11,8 @@\n     <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n   </View>\r\n );\r\n \r\n-const ShotScreen = React.lazy(() => \r\n-  import('../screens/Shot/ShotScreen').then(module => ({\r\n-    default: module.default\r\n-  }))\r\n-);\r\n-\r\n-const WeatherScreen = React.lazy(() => \r\n-  import('../screens/Weather/WeatherScreen').then(module => ({\r\n-    default: module.default\r\n-  }))\r\n-);\r\n-\r\n-const SettingsScreen = React.lazy(() => \r\n-  import('../screens/Settings/SettingsScreen').then(module => ({\r\n-    default: module.default\r\n-  }))\r\n-);\r\n-\r\n-const WrappedShotScreen = (props: any) => (\r\n-  <React.Suspense fallback={<LoadingScreen />}>\r\n-    <ShotScreen {...props} />\r\n-  </React.Suspense>\r\n-);\r\n-\r\n-const WrappedWeatherScreen = (props: any) => (\r\n-  <React.Suspense fallback={<LoadingScreen />}>\r\n-    <WeatherScreen {...props} />\r\n-  </React.Suspense>\r\n-);\r\n-\r\n-const WrappedSettingsScreen = (props: any) => (\r\n-  <React.Suspense fallback={<LoadingScreen />}>\r\n-    <SettingsScreen {...props} />\r\n-  </React.Suspense>\r\n-);\r\n-\r\n const BottomTabNavigator = () => {\r\n   return (\r\n     <Tab.Navigator\r\n       screenOptions={{\r\n@@ -62,33 +26,40 @@\n           backgroundColor: theme.colors.background,\r\n         },\r\n         headerTintColor: theme.colors.text.primary,\r\n         headerTitleStyle: theme.typography.h3,\r\n+        lazy: true,\r\n       }}\r\n     >\r\n       <Tab.Screen\r\n         name=\"Shot\"\r\n-        component={WrappedShotScreen}\r\n         options={{\r\n           title: 'Shot Calculator',\r\n           tabBarLabel: 'Shot',\r\n         }}\r\n+        getComponent={() => \r\n+          import('../screens/Shot/ShotScreen').then(module => module.default)\r\n+        }\r\n       />\r\n       <Tab.Screen\r\n         name=\"Weather\"\r\n-        component={WrappedWeatherScreen}\r\n         options={{\r\n           title: 'Weather',\r\n           tabBarLabel: 'Weather',\r\n         }}\r\n+        getComponent={() => \r\n+          import('../screens/Weather/WeatherScreen').then(module => module.default)\r\n+        }\r\n       />\r\n       <Tab.Screen\r\n         name=\"Settings\"\r\n-        component={WrappedSettingsScreen}\r\n         options={{\r\n           title: 'Settings',\r\n           tabBarLabel: 'Settings',\r\n         }}\r\n+        getComponent={() => \r\n+          import('../screens/Settings/SettingsScreen').then(module => module.default)\r\n+        }\r\n       />\r\n     </Tab.Navigator>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1736575144716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,12 @@\n import { theme } from '../styles/theme';\r\n \r\n const Tab = createBottomTabNavigator<MainTabParamList>();\r\n \r\n+const ShotScreen = React.lazy(() => import('../screens/Shot/ShotScreen'));\r\n+const WeatherScreen = React.lazy(() => import('../screens/Weather/WeatherScreen'));\r\n+const SettingsScreen = React.lazy(() => import('../screens/Settings/SettingsScreen'));\r\n+\r\n const LoadingScreen = () => (\r\n   <View style={styles.loadingContainer}>\r\n     <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n   </View>\r\n@@ -26,40 +30,33 @@\n           backgroundColor: theme.colors.background,\r\n         },\r\n         headerTintColor: theme.colors.text.primary,\r\n         headerTitleStyle: theme.typography.h3,\r\n-        lazy: true,\r\n       }}\r\n     >\r\n       <Tab.Screen\r\n         name=\"Shot\"\r\n+        component={ShotScreen}\r\n         options={{\r\n           title: 'Shot Calculator',\r\n           tabBarLabel: 'Shot',\r\n         }}\r\n-        getComponent={() => \r\n-          import('../screens/Shot/ShotScreen').then(module => module.default)\r\n-        }\r\n       />\r\n       <Tab.Screen\r\n         name=\"Weather\"\r\n+        component={WeatherScreen}\r\n         options={{\r\n           title: 'Weather',\r\n           tabBarLabel: 'Weather',\r\n         }}\r\n-        getComponent={() => \r\n-          import('../screens/Weather/WeatherScreen').then(module => module.default)\r\n-        }\r\n       />\r\n       <Tab.Screen\r\n         name=\"Settings\"\r\n+        component={SettingsScreen}\r\n         options={{\r\n           title: 'Settings',\r\n           tabBarLabel: 'Settings',\r\n         }}\r\n-        getComponent={() => \r\n-          import('../screens/Settings/SettingsScreen').then(module => module.default)\r\n-        }\r\n       />\r\n     </Tab.Navigator>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1736575152044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React from 'react';\r\n+import React, { Suspense } from 'react';\r\n import { View, ActivityIndicator, StyleSheet } from 'react-native';\r\n import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n import { MainTabParamList } from './types';\r\n import { theme } from '../styles/theme';\r\n"
                },
                {
                    "date": 1736575157975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,14 @@\n     <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n   </View>\r\n );\r\n \r\n+const withSuspense = (Component: React.LazyExoticComponent<any>) => (props: any) => (\r\n+  <Suspense fallback={<LoadingScreen />}>\r\n+    <Component {...props} />\r\n+  </Suspense>\r\n+);\r\n+\r\n const BottomTabNavigator = () => {\r\n   return (\r\n     <Tab.Navigator\r\n       screenOptions={{\r\n@@ -34,25 +40,25 @@\n       }}\r\n     >\r\n       <Tab.Screen\r\n         name=\"Shot\"\r\n-        component={ShotScreen}\r\n+        component={withSuspense(ShotScreen)}\r\n         options={{\r\n           title: 'Shot Calculator',\r\n           tabBarLabel: 'Shot',\r\n         }}\r\n       />\r\n       <Tab.Screen\r\n         name=\"Weather\"\r\n-        component={WeatherScreen}\r\n+        component={withSuspense(WeatherScreen)}\r\n         options={{\r\n           title: 'Weather',\r\n           tabBarLabel: 'Weather',\r\n         }}\r\n       />\r\n       <Tab.Screen\r\n         name=\"Settings\"\r\n-        component={SettingsScreen}\r\n+        component={withSuspense(SettingsScreen)}\r\n         options={{\r\n           title: 'Settings',\r\n           tabBarLabel: 'Settings',\r\n         }}\r\n"
                },
                {
                    "date": 1736575171627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,18 @@\n-import React, { Suspense } from 'react';\r\n+import React from 'react';\r\n import { View, ActivityIndicator, StyleSheet } from 'react-native';\r\n import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n import { MainTabParamList } from './types';\r\n import { theme } from '../styles/theme';\r\n \r\n const Tab = createBottomTabNavigator<MainTabParamList>();\r\n \r\n-const ShotScreen = React.lazy(() => import('../screens/Shot/ShotScreen'));\r\n-const WeatherScreen = React.lazy(() => import('../screens/Weather/WeatherScreen'));\r\n-const SettingsScreen = React.lazy(() => import('../screens/Settings/SettingsScreen'));\r\n-\r\n const LoadingScreen = () => (\r\n   <View style={styles.loadingContainer}>\r\n     <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n   </View>\r\n );\r\n \r\n-const withSuspense = (Component: React.LazyExoticComponent<any>) => (props: any) => (\r\n-  <Suspense fallback={<LoadingScreen />}>\r\n-    <Component {...props} />\r\n-  </Suspense>\r\n-);\r\n-\r\n const BottomTabNavigator = () => {\r\n   return (\r\n     <Tab.Navigator\r\n       screenOptions={{\r\n@@ -36,33 +26,55 @@\n           backgroundColor: theme.colors.background,\r\n         },\r\n         headerTintColor: theme.colors.text.primary,\r\n         headerTitleStyle: theme.typography.h3,\r\n+        lazy: true,\r\n       }}\r\n     >\r\n       <Tab.Screen\r\n         name=\"Shot\"\r\n-        component={withSuspense(ShotScreen)}\r\n         options={{\r\n           title: 'Shot Calculator',\r\n           tabBarLabel: 'Shot',\r\n         }}\r\n+        children={(props) => {\r\n+          const Screen = React.lazy(() => import('../screens/Shot/ShotScreen'));\r\n+          return (\r\n+            <React.Suspense fallback={<LoadingScreen />}>\r\n+              <Screen {...props} />\r\n+            </React.Suspense>\r\n+          );\r\n+        }}\r\n       />\r\n       <Tab.Screen\r\n         name=\"Weather\"\r\n-        component={withSuspense(WeatherScreen)}\r\n         options={{\r\n           title: 'Weather',\r\n           tabBarLabel: 'Weather',\r\n         }}\r\n+        children={(props) => {\r\n+          const Screen = React.lazy(() => import('../screens/Weather/WeatherScreen'));\r\n+          return (\r\n+            <React.Suspense fallback={<LoadingScreen />}>\r\n+              <Screen {...props} />\r\n+            </React.Suspense>\r\n+          );\r\n+        }}\r\n       />\r\n       <Tab.Screen\r\n         name=\"Settings\"\r\n-        component={withSuspense(SettingsScreen)}\r\n         options={{\r\n           title: 'Settings',\r\n           tabBarLabel: 'Settings',\r\n         }}\r\n+        children={(props) => {\r\n+          const Screen = React.lazy(() => import('../screens/Settings/SettingsScreen'));\r\n+          return (\r\n+            <React.Suspense fallback={<LoadingScreen />}>\r\n+              <Screen {...props} />\r\n+            </React.Suspense>\r\n+          );\r\n+        }}\r\n       />\r\n     </Tab.Navigator>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1736575184445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,53 +28,38 @@\n         headerTintColor: theme.colors.text.primary,\r\n         headerTitleStyle: theme.typography.h3,\r\n         lazy: true,\r\n       }}\r\n+      screenListeners={{\r\n+        focus: () => {\r\n+          // This ensures the screen is loaded when focused\r\n+          return undefined;\r\n+        },\r\n+      }}\r\n     >\r\n       <Tab.Screen\r\n         name=\"Shot\"\r\n         options={{\r\n           title: 'Shot Calculator',\r\n           tabBarLabel: 'Shot',\r\n         }}\r\n-        children={(props) => {\r\n-          const Screen = React.lazy(() => import('../screens/Shot/ShotScreen'));\r\n-          return (\r\n-            <React.Suspense fallback={<LoadingScreen />}>\r\n-              <Screen {...props} />\r\n-            </React.Suspense>\r\n-          );\r\n-        }}\r\n+        component={require('../screens/Shot/ShotScreen').default}\r\n       />\r\n       <Tab.Screen\r\n         name=\"Weather\"\r\n         options={{\r\n           title: 'Weather',\r\n           tabBarLabel: 'Weather',\r\n         }}\r\n-        children={(props) => {\r\n-          const Screen = React.lazy(() => import('../screens/Weather/WeatherScreen'));\r\n-          return (\r\n-            <React.Suspense fallback={<LoadingScreen />}>\r\n-              <Screen {...props} />\r\n-            </React.Suspense>\r\n-          );\r\n-        }}\r\n+        component={require('../screens/Weather/WeatherScreen').default}\r\n       />\r\n       <Tab.Screen\r\n         name=\"Settings\"\r\n         options={{\r\n           title: 'Settings',\r\n           tabBarLabel: 'Settings',\r\n         }}\r\n-        children={(props) => {\r\n-          const Screen = React.lazy(() => import('../screens/Settings/SettingsScreen'));\r\n-          return (\r\n-            <React.Suspense fallback={<LoadingScreen />}>\r\n-              <Screen {...props} />\r\n-            </React.Suspense>\r\n-          );\r\n-        }}\r\n+        component={require('../screens/Settings/SettingsScreen').default}\r\n       />\r\n     </Tab.Navigator>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1736575196397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,15 @@\n import React from 'react';\r\n-import { View, ActivityIndicator, StyleSheet } from 'react-native';\r\n+import { StyleSheet } from 'react-native';\r\n import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n import { MainTabParamList } from './types';\r\n import { theme } from '../styles/theme';\r\n+import ShotScreen from '../screens/Shot/ShotScreen';\r\n+import WeatherScreen from '../screens/Weather/WeatherScreen';\r\n+import SettingsScreen from '../screens/Settings/SettingsScreen';\r\n \r\n const Tab = createBottomTabNavigator<MainTabParamList>();\r\n \r\n-const LoadingScreen = () => (\r\n-  <View style={styles.loadingContainer}>\r\n-    <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n-  </View>\r\n-);\r\n-\r\n const BottomTabNavigator = () => {\r\n   return (\r\n     <Tab.Navigator\r\n       screenOptions={{\r\n@@ -28,38 +25,32 @@\n         headerTintColor: theme.colors.text.primary,\r\n         headerTitleStyle: theme.typography.h3,\r\n         lazy: true,\r\n       }}\r\n-      screenListeners={{\r\n-        focus: () => {\r\n-          // This ensures the screen is loaded when focused\r\n-          return undefined;\r\n-        },\r\n-      }}\r\n     >\r\n       <Tab.Screen\r\n         name=\"Shot\"\r\n+        component={ShotScreen}\r\n         options={{\r\n           title: 'Shot Calculator',\r\n           tabBarLabel: 'Shot',\r\n         }}\r\n-        component={require('../screens/Shot/ShotScreen').default}\r\n       />\r\n       <Tab.Screen\r\n         name=\"Weather\"\r\n+        component={WeatherScreen}\r\n         options={{\r\n           title: 'Weather',\r\n           tabBarLabel: 'Weather',\r\n         }}\r\n-        component={require('../screens/Weather/WeatherScreen').default}\r\n       />\r\n       <Tab.Screen\r\n         name=\"Settings\"\r\n+        component={SettingsScreen}\r\n         options={{\r\n           title: 'Settings',\r\n           tabBarLabel: 'Settings',\r\n         }}\r\n-        component={require('../screens/Settings/SettingsScreen').default}\r\n       />\r\n     </Tab.Navigator>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1736575206629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import React from 'react';\r\n-import { StyleSheet } from 'react-native';\r\n import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n import { MainTabParamList } from './types';\r\n import { theme } from '../styles/theme';\r\n import ShotScreen from '../screens/Shot/ShotScreen';\r\n@@ -54,14 +53,5 @@\n     </Tab.Navigator>\r\n   );\r\n };\r\n \r\n-const styles = StyleSheet.create({\r\n-  loadingContainer: {\r\n-    flex: 1,\r\n-    alignItems: 'center',\r\n-    justifyContent: 'center',\r\n-    backgroundColor: theme.colors.background,\r\n-  },\r\n-});\r\n-\r\n export default BottomTabNavigator;\r\n"
                },
                {
                    "date": 1736575571405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n-import React from 'react';\r\n+import React, { Suspense } from 'react';\r\n+import { View, ActivityIndicator, StyleSheet } from 'react-native';\r\n import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n import { MainTabParamList } from './types';\r\n import { theme } from '../styles/theme';\r\n import ShotScreen from '../screens/Shot/ShotScreen';\r\n@@ -7,51 +8,67 @@\n import SettingsScreen from '../screens/Settings/SettingsScreen';\r\n \r\n const Tab = createBottomTabNavigator<MainTabParamList>();\r\n \r\n+const LoadingScreen = () => (\r\n+  <View style={styles.loadingContainer}>\r\n+    <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n+  </View>\r\n+);\r\n+\r\n const BottomTabNavigator = () => {\r\n   return (\r\n-    <Tab.Navigator\r\n-      screenOptions={{\r\n-        tabBarActiveTintColor: theme.colors.primary,\r\n-        tabBarInactiveTintColor: theme.colors.text.secondary,\r\n-        tabBarStyle: {\r\n-          backgroundColor: theme.colors.background,\r\n-          borderTopColor: theme.colors.border,\r\n-        },\r\n-        headerStyle: {\r\n-          backgroundColor: theme.colors.background,\r\n-        },\r\n-        headerTintColor: theme.colors.text.primary,\r\n-        headerTitleStyle: theme.typography.h3,\r\n-        lazy: true,\r\n-      }}\r\n-    >\r\n-      <Tab.Screen\r\n-        name=\"Shot\"\r\n-        component={ShotScreen}\r\n-        options={{\r\n-          title: 'Shot Calculator',\r\n-          tabBarLabel: 'Shot',\r\n+    <Suspense fallback={<LoadingScreen />}>\r\n+      <Tab.Navigator\r\n+        screenOptions={{\r\n+          tabBarActiveTintColor: theme.colors.primary,\r\n+          tabBarInactiveTintColor: theme.colors.text.secondary,\r\n+          tabBarStyle: {\r\n+            backgroundColor: theme.colors.background,\r\n+            borderTopColor: theme.colors.border,\r\n+          },\r\n+          headerStyle: {\r\n+            backgroundColor: theme.colors.background,\r\n+          },\r\n+          headerTintColor: theme.colors.text.primary,\r\n+          headerTitleStyle: theme.typography.h3,\r\n         }}\r\n-      />\r\n-      <Tab.Screen\r\n-        name=\"Weather\"\r\n-        component={WeatherScreen}\r\n-        options={{\r\n-          title: 'Weather',\r\n-          tabBarLabel: 'Weather',\r\n-        }}\r\n-      />\r\n-      <Tab.Screen\r\n-        name=\"Settings\"\r\n-        component={SettingsScreen}\r\n-        options={{\r\n-          title: 'Settings',\r\n-          tabBarLabel: 'Settings',\r\n-        }}\r\n-      />\r\n-    </Tab.Navigator>\r\n+      >\r\n+        <Tab.Screen\r\n+          name=\"Shot\"\r\n+          component={ShotScreen}\r\n+          options={{\r\n+            title: 'Shot Calculator',\r\n+            tabBarLabel: 'Shot',\r\n+          }}\r\n+        />\r\n+        <Tab.Screen\r\n+          name=\"Weather\"\r\n+          component={WeatherScreen}\r\n+          options={{\r\n+            title: 'Weather',\r\n+            tabBarLabel: 'Weather',\r\n+          }}\r\n+        />\r\n+        <Tab.Screen\r\n+          name=\"Settings\"\r\n+          component={SettingsScreen}\r\n+          options={{\r\n+            title: 'Settings',\r\n+            tabBarLabel: 'Settings',\r\n+          }}\r\n+        />\r\n+      </Tab.Navigator>\r\n+    </Suspense>\r\n   );\r\n };\r\n \r\n+const styles = StyleSheet.create({\r\n+  loadingContainer: {\r\n+    flex: 1,\r\n+    alignItems: 'center',\r\n+    justifyContent: 'center',\r\n+    backgroundColor: theme.colors.background,\r\n+  },\r\n+});\r\n+\r\n export default BottomTabNavigator;\r\n"
                },
                {
                    "date": 1736575588144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n-import React, { Suspense } from 'react';\r\n-import { View, ActivityIndicator, StyleSheet } from 'react-native';\r\n+import React from 'react';\r\n import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n import { MainTabParamList } from './types';\r\n import { theme } from '../styles/theme';\r\n import ShotScreen from '../screens/Shot/ShotScreen';\r\n@@ -8,67 +7,50 @@\n import SettingsScreen from '../screens/Settings/SettingsScreen';\r\n \r\n const Tab = createBottomTabNavigator<MainTabParamList>();\r\n \r\n-const LoadingScreen = () => (\r\n-  <View style={styles.loadingContainer}>\r\n-    <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n-  </View>\r\n-);\r\n-\r\n const BottomTabNavigator = () => {\r\n   return (\r\n-    <Suspense fallback={<LoadingScreen />}>\r\n-      <Tab.Navigator\r\n-        screenOptions={{\r\n-          tabBarActiveTintColor: theme.colors.primary,\r\n-          tabBarInactiveTintColor: theme.colors.text.secondary,\r\n-          tabBarStyle: {\r\n-            backgroundColor: theme.colors.background,\r\n-            borderTopColor: theme.colors.border,\r\n-          },\r\n-          headerStyle: {\r\n-            backgroundColor: theme.colors.background,\r\n-          },\r\n-          headerTintColor: theme.colors.text.primary,\r\n-          headerTitleStyle: theme.typography.h3,\r\n+    <Tab.Navigator\r\n+      screenOptions={{\r\n+        tabBarActiveTintColor: theme.colors.primary,\r\n+        tabBarInactiveTintColor: theme.colors.text.secondary,\r\n+        tabBarStyle: {\r\n+          backgroundColor: theme.colors.background,\r\n+          borderTopColor: theme.colors.border,\r\n+        },\r\n+        headerStyle: {\r\n+          backgroundColor: theme.colors.background,\r\n+        },\r\n+        headerTintColor: theme.colors.text.primary,\r\n+        headerTitleStyle: theme.typography.h3,\r\n+      }}\r\n+    >\r\n+      <Tab.Screen\r\n+        name=\"Shot\"\r\n+        component={ShotScreen}\r\n+        options={{\r\n+          title: 'Shot Calculator',\r\n+          tabBarLabel: 'Shot',\r\n         }}\r\n-      >\r\n-        <Tab.Screen\r\n-          name=\"Shot\"\r\n-          component={ShotScreen}\r\n-          options={{\r\n-            title: 'Shot Calculator',\r\n-            tabBarLabel: 'Shot',\r\n-          }}\r\n-        />\r\n-        <Tab.Screen\r\n-          name=\"Weather\"\r\n-          component={WeatherScreen}\r\n-          options={{\r\n-            title: 'Weather',\r\n-            tabBarLabel: 'Weather',\r\n-          }}\r\n-        />\r\n-        <Tab.Screen\r\n-          name=\"Settings\"\r\n-          component={SettingsScreen}\r\n-          options={{\r\n-            title: 'Settings',\r\n-            tabBarLabel: 'Settings',\r\n-          }}\r\n-        />\r\n-      </Tab.Navigator>\r\n-    </Suspense>\r\n+      />\r\n+      <Tab.Screen\r\n+        name=\"Weather\"\r\n+        component={WeatherScreen}\r\n+        options={{\r\n+          title: 'Weather',\r\n+          tabBarLabel: 'Weather',\r\n+        }}\r\n+      />\r\n+      <Tab.Screen\r\n+        name=\"Settings\"\r\n+        component={SettingsScreen}\r\n+        options={{\r\n+          title: 'Settings',\r\n+          tabBarLabel: 'Settings',\r\n+        }}\r\n+      />\r\n+    </Tab.Navigator>\r\n   );\r\n };\r\n \r\n-const styles = StyleSheet.create({\r\n-  loadingContainer: {\r\n-    flex: 1,\r\n-    alignItems: 'center',\r\n-    justifyContent: 'center',\r\n-    backgroundColor: theme.colors.background,\r\n-  },\r\n-});\r\n-\r\n export default BottomTabNavigator;\r\n"
                }
            ],
            "date": 1736574779765,
            "name": "Commit-0",
            "content": "import React, { Suspense } from 'react';\r\nimport { View, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { MainTabParamList } from './types';\r\nimport { theme } from '../styles/theme';\r\n\r\n// Lazy load screens\r\nconst ShotScreen = React.lazy(() => import('../screens/Shot/ShotScreen'));\r\nconst WeatherScreen = React.lazy(() => import('../screens/Weather/WeatherScreen'));\r\nconst SettingsScreen = React.lazy(() => import('../screens/Settings/SettingsScreen'));\r\n\r\nconst Tab = createBottomTabNavigator<MainTabParamList>();\r\n\r\nconst LoadingScreen = () => (\r\n  <View style={styles.loadingContainer}>\r\n    <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n  </View>\r\n);\r\n\r\nconst ScreenWrapper: React.FC<{\r\n  children: React.ReactNode;\r\n}> = ({ children }) => (\r\n  <Suspense fallback={<LoadingScreen />}>\r\n    {children}\r\n  </Suspense>\r\n);\r\n\r\nconst WrappedShotScreen = () => (\r\n  <ScreenWrapper>\r\n    <ShotScreen />\r\n  </ScreenWrapper>\r\n);\r\n\r\nconst WrappedWeatherScreen = () => (\r\n  <ScreenWrapper>\r\n    <WeatherScreen />\r\n  </ScreenWrapper>\r\n);\r\n\r\nconst WrappedSettingsScreen = () => (\r\n  <ScreenWrapper>\r\n    <SettingsScreen />\r\n  </ScreenWrapper>\r\n);\r\n\r\nconst BottomTabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        tabBarActiveTintColor: theme.colors.primary,\r\n        tabBarInactiveTintColor: theme.colors.text.secondary,\r\n        tabBarStyle: {\r\n          backgroundColor: theme.colors.background,\r\n          borderTopColor: theme.colors.border,\r\n        },\r\n        headerStyle: {\r\n          backgroundColor: theme.colors.background,\r\n        },\r\n        headerTintColor: theme.colors.text.primary,\r\n        headerTitleStyle: theme.typography.h3,\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Shot\"\r\n        component={WrappedShotScreen}\r\n        options={{\r\n          title: 'Shot Calculator',\r\n          tabBarLabel: 'Shot',\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Weather\"\r\n        component={WrappedWeatherScreen}\r\n        options={{\r\n          title: 'Weather',\r\n          tabBarLabel: 'Weather',\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Settings\"\r\n        component={WrappedSettingsScreen}\r\n        options={{\r\n          title: 'Settings',\r\n          tabBarLabel: 'Settings',\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: theme.colors.background,\r\n  },\r\n});\r\n\r\nexport default BottomTabNavigator;\r\n"
        }
    ]
}